---
- include_vars: roles/redisdb/tasks/config.yml
- include_vars: roles/redisdb/vars/main.yml

- set_fact:
    subcluster: "{{ansible_hostname|regex_replace('\\d+$', '')}}"
    # Setup Commander (Redis web UI), one per host
    # https://github.com/joeferner/redis-commander
    # To set SSL certificate, update path in subcluster.yml
    enable_commander: False

    # Setup Redis and Haproxy Exporters, used by Prometheus monitoring, one per host
    # https://github.com/Quiq/redis_exporter
    # https://github.com/Quiq/haproxy_exporter
    enable_exporters: False

    # Add backup scripts and cron
    enable_backup: False

# Setup redis-commander
- name: Install redis-commander.json
  template: src=redis-commander.json dest=/opt/redis/ mode=0640 group=nogroup
  register: redis_commander_conf
  when: enable_commander

- name: Start redis-commander container
  docker_container:
    name: redis-commander
    labels: {"name": "redis-commander"}
    image: quiq/redis-commander:{{redis_commander_version}}
    state: started
    restart_policy: always
    network_mode: host
    user: 65534:65534
    read_only: True
    env:
      USE_SCAN=true
      NODE_EXTRA_CA_CERTS=/example.crt
    volumes:
      - /data/example.crt:/example.crt:ro
      - /opt/redis/redis-commander.json:/redis-commander/config/local-production.json:ro
  when: enable_commander

- name: Restart redis-commander
  command: docker restart redis-commander
  when: enable_commander and redis_commander_conf.changed

- name: Install redis_exporter.config
  template: src=redis_exporter.config dest=/opt/redis/ mode=0640 group=nogroup
  register: redis_exporter_conf
  when: enable_exporters

- name: Start redis_exporter container
  docker_container:
    name: redis_exporter
    labels: {"name": "redis_exporter"}
    image: quiq/redis_exporter:{{redis_exporter_version}}
    command: -web.listen-address=127.0.0.1:9121 -redis.file=/redis_exporter.config
    state: started
    restart_policy: always
    network_mode: host
    user: 65534:65534
    read_only: True
    volumes:
      - /opt/redis/redis_exporter.config:/redis_exporter.config:ro
  when: enable_exporters

- name: Restart redis_exporter
  command: docker restart redis_exporter
  when: enable_exporters and redis_exporter_conf.changed

- name: Start haproxy_exporter container
  docker_container:
    name: haproxy_exporter
    labels: {"name": "haproxy_exporter"}
    image: quiq/haproxy_exporter:{{haproxy_exporter_version}}
    command: >
      --web.listen-address=127.0.0.1:9101
      --haproxy.scrape-uris="{% for service in services[cluster][subcluster] -%}tcp://127.0.0.1:{{haproxy_api_port + services[cluster][subcluster][service]['port_offset']}}/{{service}}{%- if not loop.last -%},{%- endif -%}{% endfor %}"
    state: started
    restart_policy: always
    network_mode: host
    user: 65534:65534
    read_only: True
  when: enable_exporters

- name: Install pip packages
  pip: name={{ packages }} umask=0022 executable=pip3 state=latest
  vars:
    packages:
    - redis
  when: enable_backup

- name: Copy redis backup script
  copy: src={{item}} dest=/opt/ mode=0755
  with_items:
    - scripts/common_redis.py
    - scripts/redis-backup.py
  when: enable_backup

- name: Copy redis backup config
  template: src=redis-backup-config.yml dest=/opt/ mode=0600
  when: enable_backup

- set_fact:
    run_minute="{{ 14|random(seed=inventory_hostname) }}"
  when: enable_backup

- name: Add redis-backup cron
  cron:
    name: redis-backup
    cron_file: backups
    user: root
    minute: "{{run_minute}},{{run_minute|int + 15}},{{run_minute|int + 30}},{{run_minute|int + 45}}"
    job: "/opt/redis-backup.py >> /tmp/redis-backup.out 2>&1"
  when: enable_backup


